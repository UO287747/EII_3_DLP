	' * Struct{line=1, column=6, recordFields=[RecordField{line=2, column=3, name='integer'}, RecordField{line=3, column=3, name='character'}]} pair (offset 0)
	' * ArrayType{line=6, column=7, size=2, OF=Struct{line=6, column=9, recordFields=[RecordField{line=7, column=3, name='employees'}]}} acme (offset 3)
	' * ArrayType{line=10, column=12, size=8, OF=ArrayType{line=10, column=15, size=3, OF=int}} fibonacci (offset 11)

' Invocation to the main function
call main
halt

 p:
	' * Parameters
	' * Local variables
	enter	0
	ret	0, 0, 0
 f:
	' * Parameters
	' * real r (offset 6)
	' * int e (offset 4)
	' * Local variables
	' * real real (offset -4)
	' * char c (offset -5)
	' * int result (offset -7)
	enter	7

	' * Assignment
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	6
	addi
	loadf
	pushf	10.0
	mulf
	storef

	' * Assignment
	push	bp
	pushi	-5
	addi
	pushb	48
	storeb

	' * IfElse
	push	bp
	pushi	4
	addi
	loadi
	pushi	256
	lti
	jz	 label0

	' * If body

	' * Assignment
	push	bp
	pushi	-5
	addi
	push	bp
	pushi	4
	addi
	loadi
	i2b
	storeb

	' * Assignment
	push	bp
	pushi	-7
	addi
	push	bp
	pushi	-5
	addi
	loadb
	b2i
	storei
	jmp	 label1
 label0:

	' * Else body

	' * Assignment
	push	bp
	pushi	-7
	addi
	push	bp
	pushi	-4
	addi
	loadf
	f2i
	storei
 label1:

	' * Return
	push	bp
	pushi	-7
	addi
	loadi
	ret	2, 7, 6
 initialize:
	' * Parameters
	' * Local variables
	' * int i (offset -2)
	enter	2

	' * Assignment
	pusha	11
	pushi	0
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	pushi	0
	storei

	' * Assignment
	pusha	11
	pushi	0
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	1
	storei

	' * Assignment
	pusha	11
	pushi	0
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	pushi	1
	storei

	' * Assignment
	push	bp
	pushi	-2
	addi
	pushi	1
	storei

	' * While
 label2:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	8
	lti
	jz	 label3

	' * While body

	' * Assignment
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	subi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	storei

	' * Assignment
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	subi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	loadi
	storei

	' * Assignment
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	loadi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	addi
	storei

	' * Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	 label2
 label3:
	ret	0, 2, 0
 main:
	' * Parameters
	' * Local variables
	' * int i (offset -2)
	' * int j (offset -4)
	enter	4
	call	p

	' * Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

	' * Assignment
	pusha	0
	pushi	2
	addi
	pushb	48
	storeb

	' * Assignment
	pusha	0
	pushi	0
	addi
	pushb	48
	b2i
	storei

	' * Write
	push	bp
	pushi	-2
	addi
	loadi
	i2f
	pusha	0
	pushi	2
	addi
	loadb
	b2i
	call	f
	outi

	' * Write
	pushb	10
	outb
	pushf	1.3
	pushi	2
	call	f
	popi
	call	initialize

	' * Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

	' * While
 label4:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	8
	lti
	jz	 label5

	' * While body

	' * Write
	pushb	40
	outb

	' * Write
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	outi

	' * Write
	pushb	41
	outb

	' * Write
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	loadi
	outi

	' * Write
	pushb	43
	outb

	' * Write
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	outi

	' * Write
	pushb	61
	outb

	' * Write
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	loadi
	outi

	' * Write
	pushb	10
	outb

	' * Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	 label4
 label5:

	' * Assignment
	pusha	3
	pushi	1
	pushi	4
	muli
	addi
	pushi	0
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	0
	addi
	pushi	56
	storei

	' * Write
	pusha	3
	pushi	1
	pushi	4
	muli
	addi
	pushi	0
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	0
	addi
	loadi
	outi

	' * Write
	pushb	10
	outb

	' * Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

	' * While
 label6:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	2
	lti
	jz	 label7

	' * While body

	' * Assignment
	push	bp
	pushi	-4
	addi
	pushi	0
	storei

	' * While
 label8:
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	lti
	jz	 label9

	' * While body

	' * Assignment
	pusha	3
	push	bp
	pushi	-2
	addi
	loadi
	pushi	4
	muli
	addi
	pushi	0
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	0
	addi
	push	bp
	pushi	-2
	addi
	loadi
	push	bp
	pushi	-4
	addi
	loadi
	addi
	storei

	' * Assignment
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	 label8
 label9:

	' * Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	 label6
 label7:

	' * Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

	' * While
 label10:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	2
	lti
	jz	 label11

	' * While body

	' * Assignment
	push	bp
	pushi	-4
	addi
	pushi	0
	storei

	' * While
 label12:
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	lti
	jz	 label13

	' * While body

	' * Write
	pusha	3
	push	bp
	pushi	-2
	addi
	loadi
	pushi	4
	muli
	addi
	pushi	0
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	0
	addi
	loadi
	outi

	' * Write
	pushb	32
	outb

	' * Assignment
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	 label12
 label13:

	' * Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	 label10
 label11:
	ret	0, 4, 0
